version: "3"

services:
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
  #    volumes:
  #      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
  #      - /path/to/mariadb/data/on/host:/var/lib/mysql # Use bind mount

  php:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      #      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S opensmtpd:25
      DB_HOST: ${DB_HOST-mariadb}
      DB_PORT: ${DB_PORT-3306}
      DB_USER: ${DB_USER-drupal}
      DB_PASSWORD: ${DB_PASSWORD-drupal}
      DB_NAME: ${DB_NAME-drupal}
      DB_DRIVER: ${DB_DRIVER-mysql}
      TEST_DRUPAL_VERSION: ${DRUPAL_VERSION-8.8.x-dev}
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      COLUMNS: 80 # Set 80 columns for docker exec -it.
    ## Read instructions at https://wodby.com/docs/stacks/php/local/#xdebug
    #      PHP_XDEBUG: 1
    #      PHP_XDEBUG_DEFAULT_ENABLE: 1
    #      PHP_XDEBUG_REMOTE_CONNECT_BACK: 0
    #      PHP_IDE_CONFIG: serverName=my-ide
    #      PHP_XDEBUG_IDEKEY: "my-ide"
    #      PHP_XDEBUG_REMOTE_HOST: host.docker.internal # Docker 18.03+ Mac/Win
    #      PHP_XDEBUG_REMOTE_HOST: 172.17.0.1 # Linux
    #      PHP_XDEBUG_REMOTE_HOST: 10.254.254.254 # macOS, Docker < 18.03
    #      PHP_XDEBUG_REMOTE_HOST: 10.0.75.1 # Windows, Docker < 18.03
    #      PHP_XDEBUG_REMOTE_LOG: /tmp/php-xdebug.log
    ## PHPUnit Drupal testing configurations
    #      SIMPLETEST_BASE_URL: "http://nginx"
    #      SIMPLETEST_DB: "${DB_DRIVER}://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}#tests_"
    #      MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","goog:chromeOptions":{"args":["--disable-gpu","--headless"]}}, "http://chrome:9515"]'

    volumes:
      - ./:/var/www/html
  ## For macOS users (https://wodby.com/docs/stacks/drupal/local#docker-for-mac)
  #      - ./:/var/www/html:cached # User-guided caching
  #      - docker-sync:/var/www/html # Docker-sync
  ## For XHProf and Xdebug profiler traces
  #      - files:/mnt/files

  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
      - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html/build
      NGINX_VHOST_PRESET: $NGINX_VHOST_PRESET
    #      NGINX_DRUPAL_FILE_PROXY_URL: http://example.com
    volumes:
      - ./:/var/www/html
    # For macOS users (https://wodby.com/docs/stacks/drupal/local#docker-for-mac)
    #      - ./:/var/www/html:cached # User-guided caching
    #      - docker-sync:/var/www/html # Docker-sync
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"

  mailhog:
    image: mailhog/mailhog
    container_name: "${PROJECT_NAME}_mailhog"
    labels:
      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

  # If you would like to see what is going on you can run the following on your host:
  # docker run --rm -p 4444:4444 -p 5900:5900 --network="host" selenium/standalone-chrome-debug:latest
  # Newer version of this image might run into this issue:
  # @link https://github.com/elgalu/docker-selenium/issues/20
  selenium:
    # Newer Selenium Chrome images are not supported at the moment by behat/mink-selenium2-driver.
    image: selenium/standalone-chrome-debug:$SELENIUM_CHROME_TAG
    container_name: "${PROJECT_NAME}_chrome"
    environment:
      - DISPLAY=:99
      - SE_OPTS=-debug
      - SCREEN_WIDTH=1280
      - SCREEN_HEIGHT=800
      - VNC_NO_PASSWORD=1
    ports:
      - '4444:4444'
      - '5900:5900'
    shm_size: 2g

  portainer:
    image: portainer/portainer
    container_name: "${PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_portainer.rule=Host(`portainer.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:v2.0
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - '8000:80'
    #      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#volumes:
## Docker-sync for macOS users
#  docker-sync:
#    external: true
## For Xdebug profiler
#  files:
